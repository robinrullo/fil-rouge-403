plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'checkstyle'
}

ext {
    set('testcontainersVersion', "1.17.3")
    set('geotoolsVersion', "23.0")
    set('JTSVersion', "1.16.1")
    set('springdocOpenAPIVersion', "1.6.11")

}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

group = 'com.rullo'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

checkstyle {
    toolVersion '10.3.1'
    configFile file("checkstyle.xml")
}

checkstyleMain {
    source = 'src/main/java'
}

checkstyleTest {
    source = 'src/test/java'
}

repositories {
    maven {
        url "https://repo.osgeo.org/repository/release/"
    }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.springdoc:springdoc-openapi-ui:${springdocOpenAPIVersion}"
    implementation "org.springdoc:springdoc-openapi-data-rest:${springdocOpenAPIVersion}"

    implementation 'org.hibernate:hibernate-spatial:5.4.8.Final'
    implementation "org.geotools.jdbc:gt-jdbc-postgis:${geotoolsVersion}"
    implementation "org.geotools:gt-main:${geotoolsVersion}"
    implementation "org.geotools:gt-epsg-hsql:${geotoolsVersion}"
    implementation 'com.graphhopper.external:jackson-datatype-jts:'
    implementation "org.locationtech.jts.io:jts-io-common:${JTSVersion}"
    implementation "org.locationtech.jts:jts-core:${JTSVersion}"
    implementation 'com.graphhopper:graphhopper-core:4.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    mainClass = 'com.rullo.transportrouting.TransportRoutingApplication'
}

jar {
    enabled = false
}
task installLocalGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'scripts/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0775
}

build.dependsOn installLocalGitHook
