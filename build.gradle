plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'com.github.spotbugs' version "5.0.12"

}

group = 'com.rullo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

checkstyle {
    toolVersion '7.8.1'
    configFile file("checkstyle.xml")
}

checkstyleMain {
    source = 'src/main/java'
}

checkstyleTest {
    source = 'src/test/java'
}

spotbugs {
    toolVersion = '4.7.2'
}

repositories {
    maven {
        url "https://repo.osgeo.org/repository/release/"
    }
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.17.3")
    set('geotoolsVersion', "27.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'

    // Hibernate Spatial
    implementation 'org.hibernate:hibernate-spatial:5.6.9.Final'

    // GeoTools
    implementation "org.geotools.jdbc:gt-jdbc-postgis:22.2"
    implementation "org.geotools:gt-main:${geotoolsVersion}"
    implementation "org.geotools:gt-referencing:${geotoolsVersion}"
    implementation "org.geotools:gt-epsg-hsql:${geotoolsVersion}"
    implementation "org.geotools:gt-epsg-extension:${geotoolsVersion}"
    implementation "org.geotools:gt-geojson:${geotoolsVersion}"
    implementation "org.geotools:gt-wps:${geotoolsVersion}"

    // GeoJSON Serialization
    implementation 'de.grundid.opendatalab:geojson-jackson:1.14'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    mainClass = 'com.rullo.mulhousetransportrouting.MulhouseTransportRoutingApplication'
    version = '0.1.0'
}

task installLocalGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'scripts/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0775

    from new File(rootProject.rootDir, 'scripts/commit-msg')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0775
}

task installCommitLint(type: Exec) {
    commandLine 'npm', 'install', '@commitlint/config-conventional', '-g'
}


build.dependsOn installLocalGitHook
build.dependsOn installCommitLint
